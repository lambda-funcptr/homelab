version: 0.1
log:
  accesslog:
    disabled: true
#  level: debug
#  formatter: text
#  fields:
#    service: registry
#    environment: staging
#  hooks:
#    - type: mail
#      disabled: true
#      levels:
#        - panic
#      options:
#        smtp:
#          addr: mail.example.com:25
#          username: mailuser
#          password: password
#          insecure: true
#        from: sender@example.com
#        to:
#          - errors@example.com
#loglevel: debug # deprecated: use "log"
storage:
  filesystem:
    rootdirectory: /data
    maxthreads: 100
#  inmemory:  # This driver takes no parameters
#  delete:
#    enabled: false
#  redirect:
#    disable: false
#  cache:
#    blobdescriptor: redis
  maintenance:
    uploadpurging:
      enabled: true
      age: 168h
      interval: 24h
      dryrun: false
    readonly:
      enabled: false
auth:
#  silly:
#    realm: silly-realm
#    service: silly-service
#  token:
#    autoredirect: true
#    realm: token-realm
#    service: token-service
#    issuer: registry-token-issuer
#    rootcertbundle: /root/certs/bundle
#  htpasswd:
#    realm: basic-realm
#    path: /path/to/htpasswd
#reporting:
#  bugsnag:
#    apikey: bugsnagapikey
#    releasestage: bugsnagreleasestage
#    endpoint: bugsnagendpoint
#  newrelic:
#    licensekey: newreliclicensekey
#    name: newrelicname
#    verbose: true
http:
  addr: 0.0.0.0:443
#  prefix: /
  host: https://docker.fnptr.net
#  secret: asecretforlocaldevelopment
  relativeurls: true
  draintimeout: 60s
  tls:
    certificate: /etc/docker/registry/cert.pem
    key: /etc/docker/registry/key.pem
    clientcas:
      - /etc/docker/registry/ca.crt
#      - /path/to/another/ca.pem
#    letsencrypt:
#      cachefile: /path/to/cache-file
#      email: emailused@letsencrypt.com
#      hosts: [myregistryaddress.org]
#  debug:
#    addr: localhost:5001
#    prometheus:
#      enabled: true
#      path: /metrics
  headers:
    X-Content-Type-Options: [nosniff]
  http2:
    disabled: false
#notifications:
#  events:
#    includereferences: true
#  endpoints:
#    - name: alistener
#      disabled: false
#      url: https://my.listener.com/event
#      headers: <http.Header>
#      timeout: 1s
#      threshold: 10
#      backoff: 1s
#      ignoredmediatypes:
#        - application/octet-stream
#      ignore:
#        mediatypes:
#           - application/octet-stream
#        actions:
#           - pull
#redis:
#  addr: localhost:6379
#  password: asecret
#  db: 0
#  dialtimeout: 10ms
#  readtimeout: 10ms
#  writetimeout: 10ms
#  pool:
#    maxidle: 16
#    maxactive: 64
#    idletimeout: 300s
#health:
#  storagedriver:
#    enabled: true
#    interval: 10s
#    threshold: 3
#  file:
#    - file: /path/to/checked/file
#      interval: 10s
#  http:
#    - uri: http://server.to.check/must/return/200
#      headers:
#        Authorization: [Basic QWxhZGRpbjpvcGVuIHNlc2FtZQ==]
#      statuscode: 200
#      timeout: 3s
#      interval: 10s
#      threshold: 3
#  tcp:
#    - addr: redis-server.domain.com:6379
#      timeout: 3s
#      interval: 10s
#      threshold: 3
#proxy:
#  remoteurl: https://registry-1.docker.io
#compatibility:
#  schema1:
#    signingkeyfile: /etc/registry/key.json
#    enabled: true
#validation:
#  manifests:
#    urls:
#      allow:
#        - ^https?://([^/]+\.)*example\.com/
#      deny:
#        - ^https?://www\.example\.com/
#