- name: Delete default virtual network
  virt_net:
    command: undefine
    name: default
    state: absent

- name: Create virtnet
  virt_net:
    command: define
    name: virtnet
    xml: '{{ lookup("template", "network/virtnet.xml" )}}'
    state: present

- name: Start virtnet
  virt_net:
    command: start
    name: virtnet
    state: active
    autostart: yes

- name: Check if interface information exists...
  stat: 
    path: "/etc/network/interfaces.old"
  register: interface_backup

- name: Backup interface information...
  command: "cp /etc/network/interfaces /etc/network/interfaces.old"
  when: not interface_backup.stat.exists

- name: Delete inet6 definition
  shell: "sed -n '/inet6 static/q;p' /etc/network/interfaces.old > /etc/network/interfaces"
  when: not interface_backup.stat.exists

- name: Reboot when inet6 definition changes
  reboot: {}
  when: not interface_backup.stat.exists

- name: Apply nftables config
  template:
    src: "network/nftables.conf"
    dest: "/etc/nftables.conf"
  register: nftable_config

- name: Reload nftables
  service:
    name: nftables
    state: restarted
    enabled: yes
  when: nftable_config.changed

- name: Add self as metal.local.fnptr.net
  lineinfile:
    dest: /etc/hosts
    regexp: '.*{{net_v4}}$'
    line: "{{ net_v4 }} metal.local.fnptr.net metal"