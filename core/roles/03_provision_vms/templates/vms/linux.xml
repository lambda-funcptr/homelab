<domain type="kvm">
  <name>{{ inventory_hostname_short }}</name>
  <title>{{ inventory_hostname_short }}</title>
  <metadata>
    <libosinfo:libosinfo xmlns:libosinfo="http://libosinfo.org/xmlns/libvirt/domain/1.0">
    </libosinfo:libosinfo>
  </metadata>
  <memory unit="MiB">{{ vm["memory"] }}</memory>
  <currentMemory unit="MiB">{{ vm["memory"] }}</currentMemory>
  <vcpu placement="static">{{ vm["cpu"] }}</vcpu>
  <memoryBacking>
    <source type='memfd'/>
    <access mode='shared'/>
  </memoryBacking>
  <os>
    <type arch="x86_64" machine="pc-q35-5.2">hvm</type>
    <loader readonly="yes" type="pflash">/usr/share/OVMF/OVMF_CODE_4M.fd</loader>
    <nvram>/var/lib/libvirt/qemu/nvram/{{ inventory_hostname_short }}_VARS.fd</nvram>
    <smbios mode='sysinfo'/>
  </os>
  <sysinfo type='smbios'>
    <system>
      <entry name='manufacturer'>fnptr.net</entry>
      <entry name='product'>{{vm["install_image"]}}</entry>
      <entry name='serial'>{{ inventory_hostname_short }}</entry>
    </system>
  </sysinfo>
  <features>
    <acpi/>
    <apic/>
    <vmport state="off"/>
  </features>
  <cpu mode="host-model" check="partial"/>
  <clock offset="utc">
    <timer name="rtc" tickpolicy="catchup"/>
    <timer name="pit" tickpolicy="delay"/>
    <timer name="hpet" present="no"/>
  </clock>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <pm>
    <suspend-to-mem enabled="no"/>
    <suspend-to-disk enabled="no"/>
  </pm>
  <devices>
    <emulator>/usr/bin/qemu-system-x86_64</emulator>
    {% for disk in vm["disks"] %}
    {% if (disk["storage"] == "zfs") or (disk["storage"] == "default" and hostvars[vm["host"]]["vm_store"] == "zfs") %}
    <disk type="block" device="disk">
      <driver name="qemu" type="raw" cache="none" io="native" discard="unmap"/>
      <target dev="{{ disk['name'] }}" bus="virtio"/>
      <source dev="/dev/zvol/zfs-data/vm-{{ inventory_hostname_short }}-{{ disk['name'] }}"/>
      {% if loop.first %}
      <boot order="1"/>
      {% endif %}
    </disk>
    {% endif %}

    {% if (disk["storage"] == "lvm") or (disk["storage"] == "default" and hostvars[vm["host"]]["vm_store"] == "lvm") %}
    <disk type="volume" device="disk">
      <driver name="qemu" type="raw" cache="none" io="native" discard="unmap"/>
      <target dev="{{ disk['name'] }}" bus="virtio"/>
      <source pool="lvm" volume="vm-{{ inventory_hostname_short }}-{{ disk['name'] }}"/>
      {% if loop.first %}
      <boot order="1"/>
      {% endif %}
    </disk>
    {% endif %}
    {% endfor %}

    {% if vm["mounts"] is defined %}
    {% for mount in vm["mounts"] %}
    <filesystem type='mount' accessmode='passthrough'>
      <driver type='virtiofs'/>
      <source dir='/mnt/bulk/{{ mount["path"] }}'/>
      <target dir='{{ mount["path"] }}'/>
    </filesystem>
    {% endfor %}
    {% endif %}

    <disk type="file" device="cdrom">
      <driver name="qemu" type="raw"/>
      <source file="/mnt/images/{{vm["install_image"]}}.iso"/>
      <target dev="sda" bus="sata"/>
      <readonly/>
      <address type="drive" controller="0" bus="0" target="0" unit="0"/>
    </disk>
    <controller type="pci" index="0" model="pcie-root"/>
    <interface type="network">
      <source network="default"/>
      <model type="virtio"/>
      <boot order="2"/>
      <address type="pci" domain="0x0000" bus="0x01" slot="0x00" function="0x0"/>
    </interface>
    <console type="pty">
      <target type="serial" port="0"/>
    </console>
    <memballoon model="virtio">
      <address type="pci" domain="0x0000" bus="0x04" slot="0x00" function="0x0"/>
    </memballoon>
    <rng model="virtio">
      <backend model="random">/dev/urandom</backend>
      <address type="pci" domain="0x0000" bus="0x05" slot="0x00" function="0x0"/>
    </rng>
  </devices>
</domain>